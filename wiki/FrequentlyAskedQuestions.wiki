#summary frequently asked questions.
#labels Featured,Phase-Support

= Frequently Asked Questions =

<wiki:toc max_depth="3" />

If you have any questions, please check if it has not already been asked.
Otherwise, please let a comment or add an issue [http://code.google.com/p/ttc-project/issues/list here].

== User Questions ==

=== What do I need to install Term Suite? ===

You only need:
 * to install a Java Runtime Environment (see [http://openjdk.java.net/install/ OpenJDK])
 * to install [http://www.ims.uni-stuttgart.de/projekte/corplex/TreeTagger/ TreeTagger]
 * to download [http://ttc-project.googlecode.com/files/ttc-term-suite-1.1.jar Term Suite] on your computer

That's all!

=== How can I test Term Suite? ===

Please, have a look to the GettingStarted wiki page.

=== Does Term Suite run on Windows? ===

No. Some critical troubles have been reported by users on Widnows. 
They haven't been fixed yet.

Term Suite has been successfully tested under Linux and OpenJDK. 
They are free software. 

=== Can I launch Term Suite without in CLI only? ===

NO. Term Suite GUI makes possible to launch different 
UIMA analysis engines from the same control panel. 
As they are not only 1 analysis engine to process, there is 
no CLI usage of Term Suite.

However, *every UIMA analysis engines can be launched in CLI* 
by the help of the inner devoted Java class _TermSuiteRunner_. 
For example, the French Spotter can be launched over UTF-8 text files s follows:
{{{
  java -cp ttc-term-suite-1.2.jar eu.project.ttc.tools.TermSuiteRunner -txt -analysis-engine eu.project.ttc.french.engines.spotter.FrenchSpotter -directory /path/to/corpus/wind-energy/French/txt -language fr -encoding utf-8 --TreeTaggerHomeDirectory /usr/local/share/tree-tagger
}}}

Notice that every UIMA analysis engines can be launched by other launchers like [http://svn.apache.org/viewvc/uima/uimaj/trunk/uimaj-tools/src/main/java/org/apache/uima/tools/RunAE.java?view=markup Apache UIMA RunAE], [http://svn.apache.org/viewvc/uima/uimaj/trunk/uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java?view=markup Apache UIMA Document Analyzer], [http://code.google.com/p/uima-sandbox/source/browse/trunk/runner/sources/uima/sandbox/runner/gui/Runner.java UIMA SandBox Runner], etc.

=== Can I process HTML, PDF or DOC files? ===

NO. The text extraction should be done before using Term Suite.

=== Can I process ASCII, LATIN-1 encoded files? ===

YES. Whatever the text encoding, Term Suite converts it into UTF-8.

== Error Messages ==

For any questions about errors from Term Suite, please check that it has not been previously declared in this [http://code.google.com/p/ttc-project/issues/list bug tracker]. If not, please create a new issue.

=== I've got an error with the Spotter ===

One issue has been reported: the issue 9. 
It comes from the Apache UIMA 2.3.1 library. 

But the same version of Term Suite over the same corpus 
doesn"t lead tot the same error on other boxes 
with the same operating system. 

=== I've got an error with the Indexer ===

=== I've got an error with the Aligner ===

== Advanced User Questions ==

Advanced user questions involve to modify Term Suite source code and to recompile and repackage Term Suite.

In order to modify and package Term Suite from sources, we strongly suggest you to use [http://www.eclipse.org/ Eclipse IDE] with [http://www.eclipse.org/subversive/ Subversion], [http://www.eclipse.org/m2e/ Maven] and [http://uima.apache.org/downloads.cgi UIMA] plugins.

=== How to add, remove or modify a term detection rule? ===

Assume that I would like to add a term detection rule in French.
So I have to edit the XML resource file [http://code.google.com/p/ttc-project/source/browse/trunk/resources/eu/project/ttc/french/resources/french-multi-word-rule-system.xml resources/eu/project/ttc/french/resources/french-multi-word-rule-system.xml] accoridngly to its XML schema definition ([http://code.google.com/p/ttc-project/source/browse/modules/uima-pattern-matcher/resources/patterns.xsd XSD]).

Once this is achieved, just change the version number and repackage Term Suite as follows:
{{{
  sed -i 's/version>1.2/version>1.2-mine.1/' pom.xml
  mvn clean package
}}}

=== How to add, remove or modify a term conflation rule? ===

Assume that I would like to add a term detection rule in French.
So I have to edit the XML resource file [http://code.google.com/p/ttc-project/source/browse/trunk/resources/eu/project/ttc/french/resources/french-variant-rule-system.xml resources/eu/project/ttc/french/resources/french-variant-rule-system.xml] accoridngly to its XML schema definition ([http://code.google.com/p/ttc-project/source/browse/modules/uima-catcher/resources/rules.xsd XSD]).

Once this is achieved, just change the version number and repackage Term Suite as follows:
{{{
  sed -i 's/version>1.2/version>1.2-mine.2/' pom.xml
  mvn clean package
}}}

=== How to add another language in Term Suite? ===

Suppose that I would like to extend Term Suite to Italian.

The main point is that there already exists en [ftp://ftp.ims.uni-stuttgart.de/pub/corpora/italian-par-linux-3.1.bin.gz Italian parameter file] for TreeTagger! And its [ftp://ftp.ims.uni-stuttgart.de/pub/corpora/italian-tagset.txt tag-set] is pretty similar as that of French!

First of all, modify the version in the file pom.xml; for example from _1.2_ to _1.2+italian_ and the add Italian to language selection lists in the GUI:
{{{
  sed -i 's/version>1.2/version>1.2+italian/' pom.xml
  sed -i 's/values:en|fr|de|es/values:en|fr|de|es|it/g' sources/eu/project/ttc/tools/spotter/SpotterSettings.java sources/eu/project/ttc/tools/indexer/IndexerSettings.java sources/eu/project/ttc/tools/aligner/AlignerSettings.java
}}}

Secondly, go to the directory resources/eu/project/ttc/. Then create the italian UIMA analysis engines and resources by the help of the given GNU Make program as follows:
{{{
  cd resources/eu/project/ttc/
  make copy target=Italian code=it
  make plug target=Italian code=it
}}}

Finally, the big job consists in modifying every language resource files in the directory italian/resources in order to fit Italian processing.