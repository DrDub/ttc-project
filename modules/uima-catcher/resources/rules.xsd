<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="rules" type="Rules"/>
  <xs:complexType name="Rules">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="rule" type="Rule" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Rule">
    <xs:sequence>
      <xs:element name="parameters" type="Parameters"/>
      <xs:element name="constraint" type="Constraint"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>
  <xs:complexType name="Parameters">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="parameter" type="Parameter"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Parameter">
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="type" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="Constraint">
    <xs:choice>
      <xs:element name="eq" type="Eq"/>
      <xs:element name="lt" type="Lt"/>
      <xs:element name="leq" type="Leq"/>
      <xs:element name="gt" type="Gt"/>
      <xs:element name="geq" type="Geq"/>
      <xs:element name="neq" type="Neq"/>
      <xs:element name="true" type="True"/>
      <xs:element name="false" type="False"/>
      <xs:element name="not" type="Not"/>
      <xs:element name="and" type="And"/>
      <xs:element name="or" type="Or"/>
      <xs:element name="imply" type="Imply"/>
      <xs:element name="equiv" type="Equiv"/>
      <xs:element name="forall" type="Forall"/>
      <xs:element name="exists" type="Exists"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="Element">
    <xs:choice>
      <xs:element name="variable" type="Variable"/>
      <xs:element name="integer" type="Integer"/>
      <xs:element name="string" type="String"/>
      <xs:element name="feature" type="Feature"/>
      <xs:element name="plus" type="Plus"/>
      <xs:element name="minus" type="Minus"/>
      <xs:element name="mult" type="Mult"/>
      <xs:element name="div" type="Div"/>
      <xs:element name="get" type="Get"/>
      <xs:element name="sub" type="Sub"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="Variable">
    <xs:attribute name="name" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="Integer">
    <xs:attribute name="value" type="xs:integer" use="required" />
  </xs:complexType>
  <xs:complexType name="String">
    <xs:attribute name="value" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="Feature">
    <xs:sequence>
      <xs:element name="element" type="Element"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="Plus">
    <xs:sequence>
      <xs:element name="left" type="Element"/>
      <xs:element name="right" type="Element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Minus">
    <xs:sequence>
      <xs:element name="left" type="Element"/>
      <xs:element name="right" type="Element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Mult">
    <xs:sequence>
      <xs:element name="left" type="Element"/>
      <xs:element name="right" type="Element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Div">
    <xs:sequence>
      <xs:element name="left" type="Element"/>
      <xs:element name="right" type="Element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Get">
    <xs:sequence>
      <xs:element name="left" type="Element"/>
      <xs:element name="right" type="Element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Sub">
    <xs:sequence>
      <xs:element name="element" type="Element"/>
    </xs:sequence>
    <xs:attribute name="type" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="Eq">
    <xs:sequence>
      <xs:element name="left" type="Element"/>
      <xs:element name="right" type="Element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Lt">
    <xs:sequence>
      <xs:element name="left" type="Element"/>
      <xs:element name="right" type="Element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Leq">
    <xs:sequence>
      <xs:element name="left" type="Element"/>
      <xs:element name="right" type="Element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Gt">
    <xs:sequence>
      <xs:element name="left" type="Element"/>
      <xs:element name="right" type="Element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Geq">
    <xs:sequence>
      <xs:element name="left" type="Element"/>
      <xs:element name="right" type="Element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Neq">
    <xs:sequence>
      <xs:element name="left" type="Element"/>
      <xs:element name="right" type="Element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="True" />
  <xs:complexType name="False" />
  <xs:complexType name="Not">
    <xs:sequence>
      <xs:element name="constraint" type="Constraint"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="And">
    <xs:sequence>
      <xs:element name="left" type="Constraint"/>
      <xs:element name="right" type="Constraint"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Or">
    <xs:sequence>
      <xs:element name="left" type="Constraint"/>
      <xs:element name="right" type="Constraint"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Imply">
    <xs:sequence>
      <xs:element name="left" type="Constraint"/>
      <xs:element name="right" type="Constraint"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Equiv">
    <xs:sequence>
      <xs:element name="left" type="Constraint"/>
      <xs:element name="right" type="Constraint"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Forall">
    <xs:sequence>
      <xs:element name="constraint" type="Constraint"/>
    </xs:sequence>
    <xs:attribute name="variable" type="xs:string" use="required" />
    <xs:attribute name="type" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="Exists">
    <xs:sequence>
      <xs:element name="constraint" type="Constraint"/>
    </xs:sequence>
    <xs:attribute name="variable" type="xs:string" use="required" />
    <xs:attribute name="type" type="xs:string" use="required" />
  </xs:complexType>
</xs:schema>
