//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.12.15 at 11:03:27 PM CET 
//


package uima.sandbox.catcher.models;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Constraint complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Constraint">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;element name="eq" type="{}Eq"/>
 *         &lt;element name="lt" type="{}Lt"/>
 *         &lt;element name="leq" type="{}Leq"/>
 *         &lt;element name="gt" type="{}Gt"/>
 *         &lt;element name="geq" type="{}Geq"/>
 *         &lt;element name="neq" type="{}Neq"/>
 *         &lt;element name="true" type="{}True"/>
 *         &lt;element name="false" type="{}False"/>
 *         &lt;element name="not" type="{}Not"/>
 *         &lt;element name="and" type="{}And"/>
 *         &lt;element name="or" type="{}Or"/>
 *         &lt;element name="imply" type="{}Imply"/>
 *         &lt;element name="equiv" type="{}Equiv"/>
 *         &lt;element name="forall" type="{}Forall"/>
 *         &lt;element name="exists" type="{}Exists"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Constraint", propOrder = {
    "eq",
    "lt",
    "leq",
    "gt",
    "geq",
    "neq",
    "_true",
    "_false",
    "not",
    "and",
    "or",
    "imply",
    "equiv",
    "forall",
    "exists"
})
public class Constraint {

    protected Eq eq;
    protected Lt lt;
    protected Leq leq;
    protected Gt gt;
    protected Geq geq;
    protected Neq neq;
    @XmlElement(name = "true")
    protected True _true;
    @XmlElement(name = "false")
    protected False _false;
    protected Not not;
    protected And and;
    protected Or or;
    protected Imply imply;
    protected Equiv equiv;
    protected Forall forall;
    protected Exists exists;

    /**
     * Gets the value of the eq property.
     * 
     * @return
     *     possible object is
     *     {@link Eq }
     *     
     */
    public Eq getEq() {
        return eq;
    }

    /**
     * Sets the value of the eq property.
     * 
     * @param value
     *     allowed object is
     *     {@link Eq }
     *     
     */
    public void setEq(Eq value) {
        this.eq = value;
    }

    /**
     * Gets the value of the lt property.
     * 
     * @return
     *     possible object is
     *     {@link Lt }
     *     
     */
    public Lt getLt() {
        return lt;
    }

    /**
     * Sets the value of the lt property.
     * 
     * @param value
     *     allowed object is
     *     {@link Lt }
     *     
     */
    public void setLt(Lt value) {
        this.lt = value;
    }

    /**
     * Gets the value of the leq property.
     * 
     * @return
     *     possible object is
     *     {@link Leq }
     *     
     */
    public Leq getLeq() {
        return leq;
    }

    /**
     * Sets the value of the leq property.
     * 
     * @param value
     *     allowed object is
     *     {@link Leq }
     *     
     */
    public void setLeq(Leq value) {
        this.leq = value;
    }

    /**
     * Gets the value of the gt property.
     * 
     * @return
     *     possible object is
     *     {@link Gt }
     *     
     */
    public Gt getGt() {
        return gt;
    }

    /**
     * Sets the value of the gt property.
     * 
     * @param value
     *     allowed object is
     *     {@link Gt }
     *     
     */
    public void setGt(Gt value) {
        this.gt = value;
    }

    /**
     * Gets the value of the geq property.
     * 
     * @return
     *     possible object is
     *     {@link Geq }
     *     
     */
    public Geq getGeq() {
        return geq;
    }

    /**
     * Sets the value of the geq property.
     * 
     * @param value
     *     allowed object is
     *     {@link Geq }
     *     
     */
    public void setGeq(Geq value) {
        this.geq = value;
    }

    /**
     * Gets the value of the neq property.
     * 
     * @return
     *     possible object is
     *     {@link Neq }
     *     
     */
    public Neq getNeq() {
        return neq;
    }

    /**
     * Sets the value of the neq property.
     * 
     * @param value
     *     allowed object is
     *     {@link Neq }
     *     
     */
    public void setNeq(Neq value) {
        this.neq = value;
    }

    /**
     * Gets the value of the true property.
     * 
     * @return
     *     possible object is
     *     {@link True }
     *     
     */
    public True getTrue() {
        return _true;
    }

    /**
     * Sets the value of the true property.
     * 
     * @param value
     *     allowed object is
     *     {@link True }
     *     
     */
    public void setTrue(True value) {
        this._true = value;
    }

    /**
     * Gets the value of the false property.
     * 
     * @return
     *     possible object is
     *     {@link False }
     *     
     */
    public False getFalse() {
        return _false;
    }

    /**
     * Sets the value of the false property.
     * 
     * @param value
     *     allowed object is
     *     {@link False }
     *     
     */
    public void setFalse(False value) {
        this._false = value;
    }

    /**
     * Gets the value of the not property.
     * 
     * @return
     *     possible object is
     *     {@link Not }
     *     
     */
    public Not getNot() {
        return not;
    }

    /**
     * Sets the value of the not property.
     * 
     * @param value
     *     allowed object is
     *     {@link Not }
     *     
     */
    public void setNot(Not value) {
        this.not = value;
    }

    /**
     * Gets the value of the and property.
     * 
     * @return
     *     possible object is
     *     {@link And }
     *     
     */
    public And getAnd() {
        return and;
    }

    /**
     * Sets the value of the and property.
     * 
     * @param value
     *     allowed object is
     *     {@link And }
     *     
     */
    public void setAnd(And value) {
        this.and = value;
    }

    /**
     * Gets the value of the or property.
     * 
     * @return
     *     possible object is
     *     {@link Or }
     *     
     */
    public Or getOr() {
        return or;
    }

    /**
     * Sets the value of the or property.
     * 
     * @param value
     *     allowed object is
     *     {@link Or }
     *     
     */
    public void setOr(Or value) {
        this.or = value;
    }

    /**
     * Gets the value of the imply property.
     * 
     * @return
     *     possible object is
     *     {@link Imply }
     *     
     */
    public Imply getImply() {
        return imply;
    }

    /**
     * Sets the value of the imply property.
     * 
     * @param value
     *     allowed object is
     *     {@link Imply }
     *     
     */
    public void setImply(Imply value) {
        this.imply = value;
    }

    /**
     * Gets the value of the equiv property.
     * 
     * @return
     *     possible object is
     *     {@link Equiv }
     *     
     */
    public Equiv getEquiv() {
        return equiv;
    }

    /**
     * Sets the value of the equiv property.
     * 
     * @param value
     *     allowed object is
     *     {@link Equiv }
     *     
     */
    public void setEquiv(Equiv value) {
        this.equiv = value;
    }

    /**
     * Gets the value of the forall property.
     * 
     * @return
     *     possible object is
     *     {@link Forall }
     *     
     */
    public Forall getForall() {
        return forall;
    }

    /**
     * Sets the value of the forall property.
     * 
     * @param value
     *     allowed object is
     *     {@link Forall }
     *     
     */
    public void setForall(Forall value) {
        this.forall = value;
    }

    /**
     * Gets the value of the exists property.
     * 
     * @return
     *     possible object is
     *     {@link Exists }
     *     
     */
    public Exists getExists() {
        return exists;
    }

    /**
     * Sets the value of the exists property.
     * 
     * @param value
     *     allowed object is
     *     {@link Exists }
     *     
     */
    public void setExists(Exists value) {
        this.exists = value;
    }

}
