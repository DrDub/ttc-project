<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
	<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=utf-8">
	<TITLE></TITLE>
	<META NAME="GENERATOR" CONTENT="LibreOffice 3.4  (Linux)">
	<META NAME="CREATED" CONTENT="0;0">
	<META NAME="CHANGEDBY" CONTENT="Jérôme Rocheteau">
	<META NAME="CHANGED" CONTENT="20111207;14253900">
	<META NAME="CHANGEDBY" CONTENT="Jérôme Rocheteau">
	<META NAME="CHANGEDBY" CONTENT="Jérôme Rocheteau">
	<STYLE TYPE="text/css">
	<!--
		H2.western { font-family: "Albany", sans-serif; font-size: 14pt; font-style: italic }
		H2.cjk { font-family: "HG Mincho Light J"; font-size: 14pt; font-style: italic }
		H2.ctl { font-family: "Arial Unicode MS"; font-size: 14pt; font-style: italic }
	-->
	</STYLE>
</HEAD>
<BODY LANG="en-GB" DIR="LTR">
<H1 ALIGN=JUSTIFY><FONT FACE="Liberation Sans, sans-serif">Termer</FONT></H1>
<P ALIGN=JUSTIFY><FONT FACE="Liberation Sans, sans-serif"><B>Termer</B>
makes possible to perform: </FONT>
</P>
<UL>
	<LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0cm"><FONT FACE="Liberation Sans, sans-serif">monolingual
	single-word term detection, </FONT>
	</P>
	<LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0cm"><FONT FACE="Liberation Sans, sans-serif">monolingual
	rule-based multi-word term detection, </FONT>
	</P>
	<LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0cm"><FONT FACE="Liberation Sans, sans-serif">monolingual
	neoclassical compound detection,</FONT></P>
	<LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0cm"><FONT FACE="Liberation Sans, sans-serif">monolingual
	stop word filtering;</FONT></P>
	<LI><P ALIGN=JUSTIFY><FONT FACE="Liberation Sans, sans-serif">term
	frequency and term domain-specificity computing. </FONT>
	</P>
</UL>
<P ALIGN=JUSTIFY><FONT FACE="Liberation Sans, sans-serif">It requires
XMI files previously generated by a </FONT><FONT FACE="Liberation Sans, sans-serif"><B>Tagger</B></FONT>
<FONT FACE="Liberation Sans, sans-serif">as inputs. It generates
itself a XMI file in the output directory per XMI file in the input
directory and one other XMI file that stands for the monolingual
terminology. </FONT>
</P>
<H2 CLASS="western" ALIGN=JUSTIFY><FONT FACE="Liberation Sans, sans-serif">Settings</FONT></H2>
<P ALIGN=JUSTIFY><FONT FACE="Liberation Sans, sans-serif"><B>Termer</B>
requires the following parameters to be set: </FONT>
</P>
<UL>
	<LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0cm"><FONT FACE="Liberation Sans, sans-serif"><I>Language</I>:
	the 2-letter code for the language of text files in the input
	directory; </FONT>
	</P>
	<LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0cm"><FONT FACE="Liberation Sans, sans-serif"><I>Input
	Directory</I>: the folder where reading the XMI files; </FONT>
	</P>
	<LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0cm"><FONT FACE="Liberation Sans, sans-serif"><I>Output
	Directory</I>: the folder where writing the XMI files; </FONT>
	</P>
	<LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0cm"><FONT FACE="Liberation Sans, sans-serif"><I><SPAN STYLE="font-weight: normal">Terminology
	File</SPAN></I>: the XMI file that stands for the terminology;</FONT></P>
	<LI><P ALIGN=JUSTIFY><FONT FACE="Liberation Sans, sans-serif"><I><SPAN STYLE="font-weight: normal">Term
	Annotation Type</SPAN></I>: the type of terms that have to be
	indexed i.e. all detected terms, only single-word terms, or
	multi-word ones, or neoclassical compounds. </FONT>
	</P>
</UL>
<H2 CLASS="western">Behaviour</H2>
<P ALIGN=JUSTIFY><B>Termer</B> behaves as follows:</P>
<UL>
	<LI><P ALIGN=JUSTIFY>Firstly, it reads every XMI files from the
	<I>Input Directory</I> parameter value and creates CAS from them
	assuming these CAS comes with word annotations.</P>
	<LI><P ALIGN=JUSTIFY>Firstly, it creates a single-word term
	annotation each time a word annotation has a 'noun', an 'adjective'
	or a 'verb' for its feature value.</P>
	<LI><P ALIGN=JUSTIFY>Secondly, it creates a multi-word term
	annotation each time a sequence of annotations matches a pattern –
	that should be provided by the user through a parameter (TODO).</P>
	<LI><P ALIGN=JUSTIFY>Thirdly, it creates a neoclassical compound
	annotation each time neoclassical elements  that should be set by
	the user through a parameter (TODO) – are detected within a word
	annotation covered text.</P>
	<LI><P ALIGN=JUSTIFY>Fourthly, it removes stop words according to a
	stop word list resource.</P>
	<LI><P ALIGN=JUSTIFY>Then, it indexes every term annotation into a
	collection annotation index, filtering in terms which absolute
	frequency is greater than 1, computing term relative frequencies and
	computing term domain specificities if a general language term
	frequency list exists as resource.</P>
	<LI><P ALIGN=JUSTIFY>Finally, it writes a XMI file for this
	terminology and also writes new output XMI files from the input
	ones.</P>
</UL>
</BODY>
</HTML>